% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/create_cooccurrence_matrix.R
\name{create_cooccurrence_matrix}
\alias{create_cooccurrence_matrix}
\alias{tabulate_cooccurrence_among_types}
\alias{get_forward_windows}
\title{Create co-occurrence matrix from a list of transcripts}
\usage{
create_cooccurrence_matrix(tokens, window_size, types = NULL)

tabulate_cooccurrence_among_types(tokens, types, window_size)

get_forward_windows(tokens, type, window_size)
}
\arguments{
\item{tokens}{A character vector or list of character vectors}

\item{window_size}{The size of the forward-looking window within which co-occurrence should be tabulated.}

\item{types}{An optional argument that defines the rows and columns of the returned coocurrence matrix.}
}
\description{
If the input is a character vector it will be treated as a single transcript.
If a list of character vectors are provided, they they are handled as
separate transcripts. Co-occurrences are not tracked across transcripts.
}
\details{
In a forward-looking window of size \code{k}, the first word in the window is
associated with the remaining \code{k - 1} words in the window. If the window
is of size 2 and consists of \code{cow, duck}, then the counter tracking the
number of times \code{cow} is following by \code{duck} will be incremented by
one. In the returned co-occurrence matrix, this means incrementing the value
in the row for "cow" and the column for "duck".

If \code{types} are provided, then only co-occurrences between the provided
types are counted.

If the \code{tokens} input is a list of character vectors, forward-looking windows do NOT span list elements. Thus, if the input were:

 \code{list(c('cow', 'duck'), c('pig', 'chicken'))}

Trying to construct a forward-looking window of size 2 beginning on the
second token in the first character vector ("duck") would yield
\code{c('duck', NA)}. Co-occurrences are not tracked across list
elements---they are not considered to be adjacent to each other in
speech/text.
}
\section{Functions}{
\itemize{
\item \code{tabulate_cooccurrence_among_types}: Tabulate directed co-occurrences

\item \code{get_forward_windows}: Construct forward-looking windows
}}

